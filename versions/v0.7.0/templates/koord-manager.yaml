apiVersion: v1
kind: Namespace
metadata:
  labels:
    controle-plane: koordinator
  name: {{ .Values.installation.namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: koordinator-webhook-service
  namespace: {{ .Values.installation.namespace }}
spec:
{{ ( include "webhookServiceSpec" . ) | indent 2 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: koordinator-webhook-certs
  namespace: {{ .Values.installation.namespace }}
{{ ( include "webhookSecretData" . ) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    koord-app: koord-manager
  name: koord-manager
  namespace: {{ .Values.installation.namespace }}
spec:
  replicas: {{ .Values.manager.replicas }}
  selector:
    matchLabels:
      koord-app: koord-manager
  minReadySeconds: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      labels:
        koord-app: koord-manager
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 8 }}
{{- end }}
      containers:
        - args:
            - --enable-leader-election
            - --metrics-addr={{ .Values.manager.metrics.addr }}:{{ .Values.manager.metrics.port }}
            - --health-probe-addr=:{{ .Values.manager.healthProbe.port }}
            - --logtostderr=true
            - --leader-election-namespace={{ .Values.installation.namespace }}
            - --v={{ .Values.manager.log.level }}
            - --feature-gates={{ .Values.featureGates }}
            - --sync-period={{ .Values.manager.resyncPeriod }}
            - --config-namespace={{ .Values.installation.namespace }}
          command:
            - /koord-manager
          image: {{ .Values.imageRepositoryHost }}/{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}
          imagePullPolicy: Always
          name: manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_PORT
              value: "{{ .Values.manager.webhook.port }}"
            - name: WEBHOOK_CONFIGURATION_FAILURE_POLICY_PODS
              value: {{ .Values.webhookConfiguration.failurePolicy.pods }}
          ports:
            - containerPort: {{ .Values.manager.webhook.port }}
              name: webhook-server
              protocol: TCP
            - containerPort: {{ .Values.manager.metrics.port }}
              name: metrics
              protocol: TCP
            - containerPort: {{ .Values.manager.healthProbe.port }}
              name: health
              protocol: TCP
          readinessProbe:
            httpGet:
              path: readyz
              port: {{ .Values.manager.healthProbe.port }}
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
      hostNetwork: {{ .Values.manager.hostNetwork }}
      terminationGracePeriodSeconds: 10
      serviceAccountName: koord-manager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: koord-app
                  operator: In
                  values:
                  - koord-manager
              topologyKey: kubernetes.io/hostname
            weight: 100
{{- with .Values.manager.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
{{- end }}

{{- if .Values.manager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.manager.nodeSelector | indent 8 }}
{{- end }}

{{- if .Values.manager.tolerations }}
      tolerations:
{{ toYaml .Values.manager.tolerations | indent 8 }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: koord-manager
{{- if .Values.serviceAccount.annotations }}
  annotations:
{{ toYaml .Values.serviceAccount.annotations | indent 4 }}
{{- end }}
  namespace: {{ .Values.installation.namespace }}
{{ ( include "serviceAccountManager" . ) }}
