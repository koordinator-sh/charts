apiVersion: v1
kind: Namespace
metadata:
  labels:
    controle-plane: koordinator
  name: {{ .Values.installation.namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hadoop-yarn.fullname" . }}-rm
  namespace: {{ .Values.installation.namespace }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "hadoop-yarn.name" . }}
    helm.sh/chart: {{ include "hadoop-yarn.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: yarn-rm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop-yarn.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: yarn-rm
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hadoop-yarn.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: yarn-rm
    spec:
      terminationGracePeriodSeconds: 0
      dnsPolicy: ClusterFirst
      # hostNetwork: true
      # Let rm pod schedule to node with specific label.
      nodeSelector:
{{ toYaml .Values.yarn.resourceManager.nodeSelector | indent 8 }}
      containers:
      - name: yarn-rm
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: {{ .Values.yarn.resourceManager.webPort }}
          name: web
        command:
           - "/bin/bash"
           - "/tmp/hadoop-config/bootstrap.sh"
           - "-d"
        resources:
{{ toYaml .Values.yarn.resourceManager.resources | indent 10 }}
        env:
          - name: YARN_ROLE
            value: yarn-rm
        readinessProbe:
          httpGet:
            path: /ws/v1/cluster/info
            port: {{ .Values.yarn.resourceManager.webPort }}
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /ws/v1/cluster/info
            port: {{ .Values.yarn.resourceManager.webPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
{{- if .Values.hdfs.enabled }}
      - name: hdfs-nn
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        ports:
          - containerPort: {{ .Values.hdfs.nameNode.httpPort }}
            name: web
        command:
          - "/bin/bash"
          - "/tmp/hadoop-config/bootstrap.sh"
          - "-d"
        resources:
{{ toYaml .Values.hdfs.nameNode.resources | indent 10 }}
        env:
        - name: YARN_ROLE
          value: hdfs-nn
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.hdfs.nameNode.httpPort }}
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: {{ .Values.hdfs.nameNode.httpPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
          - name: hadoop-config
            mountPath: /tmp/hadoop-config
{{- end }}
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ include "hadoop-yarn.fullname" . }}